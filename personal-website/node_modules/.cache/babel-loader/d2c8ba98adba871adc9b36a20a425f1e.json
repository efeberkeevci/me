{"ast":null,"code":"var _jsxFileName = \"/Users/efeevci/Desktop/efeevci.com/personal_website_frontend/personal-website/src/Components/Calendar2.js\";\nimport React from 'react';\nimport Calendar from 'react-awesome-calendar';\nimport styles from '../Styles/Calendar2.css';\nimport Activity from \"../OldComponents/Activity.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_ROOT_URL = \"https://efeevci-person-site-backend.herokuapp.com\";\nvar date = new Date();\nvar current_month = date.getMonth() + 1;\nlet activities = [];\nlet events = [];\n/*\nconst events = [{\n  id: 1,\n  color: '#fd3153',\n  from: '2020-11-02T18:00:00+00:00',\n  to: '2020-11-07T19:00:00+00:00',\n  title: 'Seeing family',\n}, {\n  id: 2,\n  color: '#1ccb9e',\n  from: '2020-11-01T13:00:00+00:00',\n  to: '2020-11-07T14:00:00+00:00',\n  title: 'Holiday',\n}, {\n  id: 3,\n  color: '#F480A8',\n  from: '2020-11-05T00:00:00+00:00',\n  to: '2020-11-06T00:01:00+00:00',\n  title: 'Jet skiing',\n}, {\n  id: 4,\n  color: '#fda256',\n  from: '2020-11-05T18:00:00+00:00',\n  to: '2020-11-05T19:30:00+00:00',\n  title: 'Dinner',\n}, {\n  id: 5,\n  color: '#8281fd',\n  from: '2020-11-15T12:00:00+00:00',\n  to: '2020-11-15T21:00:00+00:00',\n  title: 'Doctors',\n}];\n*/\n\nclass Calendar2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.calendar = /*#__PURE__*/React.createRef();\n  }\n\n  getDays(month) {\n    fetch(BACKEND_ROOT_URL + \"/days/\" + month).then(res => res.json()).then(result => {\n      result.forEach(day => {\n        this.getActivity(day.day_id, day.date);\n      });\n    }, error => {\n      console.log(\"Error in getting days: \", error);\n    });\n  }\n\n  getActivity(day_id, date) {\n    fetch(BACKEND_ROOT_URL + \"/activities/\" + day_id).then(res => res.json()).then(result => {\n      result.forEach(element => {\n        let activity = new Activity();\n        activity.date = date;\n        activity.day_id = day_id;\n        activity.activity_id = element.activity_id;\n        activity.title = element.title;\n        activity.description = element.description;\n        this.getTag(activity);\n        activities.push(activity);\n      });\n    }, error => {\n      console.log(\"Error in getting activity: \", error);\n    });\n  }\n\n  getTag(activity) {\n    fetch(BACKEND_ROOT_URL + \"/tags/\" + activity.activity_id).then(res => res.json()).then(result => {\n      result.forEach(tag => {\n        activity.tags.push(tag.name);\n      });\n    }, error => {\n      console.log(\"Error in getting tags: \", error);\n    });\n  }\n\n  createEvents(activities) {\n    let id = 0;\n    console.log(\"here\");\n\n    for (let activity of activities) {\n      console.log(activity);\n      var ttl = activity.title;\n      events.push({\n        id: {\n          id\n        },\n        color: '#fd3153',\n        from: '2021-08-02T18:00:00+00:00',\n        to: '2020-08-04T18:00:00+00:00',\n        title: {\n          ttl\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    //const details = this.calendar.current.getDetails();\n    // call get events endpoint\n    getDays(current_month).then(() => createEvents(activities).then(() => console.log(\"succesfully fetched activities\")));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pageCalendar,\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        ref: this.calendar,\n        onClickEvent: event => console.log('this is an event', event),\n        onChange: dates => console.log(dates),\n        onClickTimeLine: date => console.log(date),\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Calendar2;","map":{"version":3,"sources":["/Users/efeevci/Desktop/efeevci.com/personal_website_frontend/personal-website/src/Components/Calendar2.js"],"names":["React","Calendar","styles","Activity","BACKEND_ROOT_URL","date","Date","current_month","getMonth","activities","events","Calendar2","Component","constructor","props","calendar","createRef","getDays","month","fetch","then","res","json","result","forEach","day","getActivity","day_id","error","console","log","element","activity","activity_id","title","description","getTag","push","tag","tags","name","createEvents","id","ttl","color","from","to","componentDidMount","render","pageCalendar","event","dates"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Calendar from 'react-awesome-calendar';\nimport styles from '../Styles/Calendar2.css';\nimport Activity from \"../OldComponents/Activity.js\";\n\nconst BACKEND_ROOT_URL = \"https://efeevci-person-site-backend.herokuapp.com\";\nvar date = new Date();\nvar current_month = date.getMonth() + 1;\nlet activities = [];\nlet events = [];\n\n\n/*\nconst events = [{\n  id: 1,\n  color: '#fd3153',\n  from: '2020-11-02T18:00:00+00:00',\n  to: '2020-11-07T19:00:00+00:00',\n  title: 'Seeing family',\n}, {\n  id: 2,\n  color: '#1ccb9e',\n  from: '2020-11-01T13:00:00+00:00',\n  to: '2020-11-07T14:00:00+00:00',\n  title: 'Holiday',\n}, {\n  id: 3,\n  color: '#F480A8',\n  from: '2020-11-05T00:00:00+00:00',\n  to: '2020-11-06T00:01:00+00:00',\n  title: 'Jet skiing',\n}, {\n  id: 4,\n  color: '#fda256',\n  from: '2020-11-05T18:00:00+00:00',\n  to: '2020-11-05T19:30:00+00:00',\n  title: 'Dinner',\n}, {\n  id: 5,\n  color: '#8281fd',\n  from: '2020-11-15T12:00:00+00:00',\n  to: '2020-11-15T21:00:00+00:00',\n  title: 'Doctors',\n}];\n*/\n\nclass Calendar2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.calendar = React.createRef();\n  }\ngetDays(month){\n  fetch(BACKEND_ROOT_URL + \"/days/\" + month).then(res => res.json())\n      .then(\n          (result) => {\n              result.forEach(day => {\n                  this.getActivity(day.day_id, day.date);\n              })\n\n          },\n          (error) => {\n              console.log(\"Error in getting days: \", error)\n          }\n      )\n}\ngetActivity(day_id, date) {\n  fetch(BACKEND_ROOT_URL + \"/activities/\" + day_id).then(res => res.json())\n      .then(\n          (result) => {\n              result.forEach(element => {\n                  let activity = new Activity();\n                  activity.date = date;\n                  activity.day_id = day_id;\n                  activity.activity_id = element.activity_id;\n                  activity.title = element.title;\n                  activity.description = element.description;\n                  this.getTag(activity);\n                  activities.push(activity);\n              });\n          },\n          (error) => {\n              console.log(\"Error in getting activity: \", error)\n          }\n      )\n}\n\ngetTag(activity) {\n  fetch(BACKEND_ROOT_URL + \"/tags/\" + activity.activity_id).then(res => res.json())\n      .then(\n          (result) => {\n              result.forEach(tag => {\n                  activity.tags.push(tag.name);\n              });\n          },\n          (error) => {\n              console.log(\"Error in getting tags: \", error)\n          }\n      )\n}\n\ncreateEvents(activities){\n  let id = 0;\n console.log(\"here\");\n  for(let activity of activities){\n    console.log(activity);\n    var ttl = activity.title;\n    events.push({\n      id : {id},\n      color : '#fd3153',\n      from : '2021-08-02T18:00:00+00:00',\n      to: '2020-08-04T18:00:00+00:00',\n      title:{ttl}\n    });\n  }\n}\n  componentDidMount() {\n    //const details = this.calendar.current.getDetails();\n    // call get events endpoint\n    getDays(current_month).then(\n      () => createEvents(activities).then(\n        ()=>console.log(\"succesfully fetched activities\" )\n      )\n    );\n    \n  }\n\n  render() {\n    return (\n      <div className={styles.pageCalendar}>\n        <Calendar\n          ref={this.calendar}\n          onClickEvent={(event) => console.log('this is an event', event)}\n          onChange={(dates) => console.log(dates)}\n          onClickTimeLine={(date) => console.log(date)}\n          events={events}\n        />\n      </div>\n    );\n  }\n}export default Calendar2;"]},"metadata":{},"sourceType":"module"}